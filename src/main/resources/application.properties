spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/keycloak?createDatabaseIfNotExist=true}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=${DATABASE_USER:keycloak}
spring.datasource.password=${DATABASE_PASSWORD:password}

spring.jpa.open-in-view=false
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

#URL APIs externas
solicitacao.analise.proposta=${SOLICITA_ANALISE_URL:http://localhost:9999}
cartao.proposta.cadastro=${CADASTRA_CARTAO_URL:http://localhost:8888}

tempo.resposta.consulta=5000


#Cript Base64
proposta.criptografia.cifra=AES/ECB/PKCS5Padding
proposta.criptografia.chave=enVwX1Byb3Bvc3RhX05vc3NvQ2FydGFv

#Configuracao para acessar keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWK_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

logging.level.org.springframework.security=DEBUG

#opentracing-jager
opentracing.jaeger.log-spans=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=propostas-api
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://zup-dev:14268/api/traces}





